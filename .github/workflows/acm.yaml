name: ACM

on:
  push:
    branches:
      - main
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-*"
    paths:
      - .github/workflows/acm.yaml
      - main.go
      - api/**
      - pkg/**
      - controllers/**
      - application-connector.yaml
      - application-connector-dependencies.yaml
      - go.sum
      - go.mod
      - Dockerfile

  pull_request_target:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/acm.yaml
      - main.go
      - api/**
      - pkg/**
      - controllers/**
      - application-connector.yaml
      - application-connector-dependencies.yaml
      - go.sum
      - go.mod
      - Dockerfile

permissions:
  id-token: write # This is required for requesting the JWT token
  contents: read # This is required for actions/checkout

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Set up go environment
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Run unit tests
        run: |
          set -o pipefail
          make test | tee test.log
      - name: Archive test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: acm-unit-test.log
          path: test.log
      - name: Generate summary
        if: success() || failure()
        run: |
          {
            echo '## ACM Test Log'
            echo "<details>"
            echo "<summary>click to expand logs</summary>"
            printf '\n```\n'
            cat test.log
            printf '\n```\n'
            echo "</details>"
          } >> $GITHUB_STEP_SUMMARY

  build-image:
    needs: setup
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main # Usage: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: application-connector-manager
      dockerfile: Dockerfile
      context: .
      tags: ${{ needs.setup.outputs.tag }}

  print-images:
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: "Generate summary"
        run: |
          {
            echo '## ACM Images'
            printf '\n```json\n'
            echo '${{ needs.build-image.outputs.images }}' | jq
            printf '\n```\n'
          } >> $GITHUB_STEP_SUMMARY
