name: Run app-gateway integration tests on k3d
on:
  push:
    branches: [ main ]
  pull_request:
env:
  IMAGE: ttl.sh/central-application-gateway
jobs:
  gateway-build-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into ghcr.io registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE }}
        tags: |
          type=sha
          type=ref,event=pr
          type=raw,value={{date 'YYYYMMDD'}}-{{sha}}
          type=raw,value=1d

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        context: ./components/central-application-gateway
        file: ./components/central-application-gateway/Dockerfile
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: gateway-build-pr
    steps:
      - uses: azure/setup-helm@v4.1.0
        id: install
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up go environment
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.3
      - name: Install k3d
        env:
          K3D_URL: https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh
          DEFAULT_K3D_VERSION: v5.6.0
        run: curl --silent --fail $K3D_URL | TAG=$DEFAULT_K3D_VERSION bash

      - name: Figure out image tag
        id: tag
        run: echo "tag=$(date +'%Y%m%d')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Run unit tests
        env:
          IMG: ${{ env.IMAGE }}:${{ steps.tag.outputs.tag }}
        run: |
          echo "Using image $IMG"
          make -C tests/hack/ci k3d-gateway-tests
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-gateway-test-results
          path: application-gateway-test.log
